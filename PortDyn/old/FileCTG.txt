'Sub CTG() ---> it produces the word file of the weekly CTG.
'
'Private Function getDatesAndMonth() ---> extract the day and month and year from Now() function in a format that is needed in the CTG word file
'
'Private Function checkFolderExistance() ---> checks if a folder exists, the input variable is the string address of the folder
'
'Private Function createFolder(ByVal strFolderPath As String) ---> INPUT= string of address. It checks whether a folder exists and if not, it creates each subfolder missing
'

Sub dynamicCTG()
Dim wrdApp As Word.Application
Dim wrdDoc As Word.Document
Dim i As Integer
Dim ws As Excel.Worksheet

Name_doc = "Verbale CTG Finint Dynamic - " & Format(Now(), "ddmmmmyy") & ".docx"

day_td = CDbl(Format(Now(), "dd"))
dt = Format(Now(), "mm.yyyy")
y = Format(Now(), "yyyy")
nWeek = day_td Mod 7

nameSubFolder = Format(Now(), "dd.mm.yyyy") & " " & nWeek & "SETTIMANA " & UCase(Format(Now(), "mmmm"))

strFolder = "Y:\Mobiliare\04 Finint Dynamic Equity\00_Documenti_Reportistica\03 Comitati\00 Comitati Tecnici Gestione\" & y & "\" & dt & "\" & nameSubFolder

createFolder (strFolder)

Set wrdApp = CreateObject("Word.Application")
wrdApp.Visible = True
Set wrdDoc = wrdApp.Documents.Add(Template:="Y:\Mobiliare\04 Finint Dynamic Equity\00_Documenti_Reportistica\03 Comitati\00 Comitati Tecnici Gestione\Verbale CTG Dynamic - Template .dotx", Newtemplate:=False, DocumentType:=0)

With wrdDoc
     .Content.InsertAfter Chr(10) & Chr(10) & "VERBALE DEL COMITATO TECNICO DI GESTIONE IN RELAZIONE" & _
                           "ALLA GESTIONE DEL FONDO " & Chr(34) & "FININT DYNAMIC EQUITY " & Chr(34) & _
                           Chr(10) & day_td & " - " & day_td + 4 & month_today & " " & UCase(Format(Now(), "mmmm")) & " " & y
    .Paragraphs(3).Range.Font.Name = "Times New Roman"
    .Paragraphs(3).Range.Font.Size = 11
    .Paragraphs(3).Range.Font.Bold = True
    .Paragraphs(4).Range.Font.Name = "Times New Roman"
    .Paragraphs(4).Range.Font.Size = 11
    .Paragraphs(3).Range.ParagraphFormat.Alignment = wdAlignParagraphCenter
    .Paragraphs(4).Range.Font.Bold = True
    .Paragraphs(4).Range.ParagraphFormat.Alignment = wdAlignParagraphCenter


    .Content.InsertAfter Chr(10)
    .Paragraphs(5).Range.Font.Size = 11
    .Content.InsertParagraphAfter
    .Content.InsertAfter "Nei Giorni dal " & day_td & " al " & day_td + 4 & " " & Format(Now(), "mmmm yyyy") & _
                        " alle ore 9:00 in Conegliano presso la sede sociale in Via Alfieri, 1 si Ã¨ riunito il Comitato Investimenti" & _
                        " di Finanziaria Internazionale Investments SGR con il seguente ordine del giorno:" & Chr(10)
                        
    .Paragraphs(6).Range.Font.Size = 11
    .Paragraphs(6).Range.Font.Italic = False
    .Paragraphs(6).Range.Font.Bold = False
    .Paragraphs(6).Range.ParagraphFormat.Alignment = wdAlignParagraphLeft
   
    .Paragraphs(7).Range.Font.Size = 11
    .Paragraphs(7).Range.Font.Italic = False
    .Paragraphs(7).Range.Font.Bold = False
    .Paragraphs(7).Range.ParagraphFormat.Alignment = wdAlignParagraphLeft
   
    .Content.InsertAfter Chr(13) & "1.  Portafoglio Attuale" & Chr(10) & _
                         "2.  Controlli Rischio" & Chr(10) & _
                         "3.  Asset Allocation" & Chr(10)
   
    .Content.InsertParagraphAfter
        .Content.InsertAfter "Partecipanti:  " & Chr(10) & Chr(10) & _
                            "1.  Daniele Vadori" & Chr(10) & _
                            "2.  Filippo Napoletano" & Chr(10) & _
                            "3.  Fausto Chino (Risk Manager)" & Chr(10) & _
                            "4.  Thomas Beggio (Risk Manager)" & Chr(10)
    .Range(.Paragraphs(16).Range.Characters(18).Start, .Paragraphs(16).Range.Characters(31).End).Font.Italic = True
    .Range(.Paragraphs(17).Range.Characters(19).Start, .Paragraphs(17).Range.Characters(32).End).Font.Italic = True
        .Content.InsertParagraphAfter
    l_par = .Paragraphs.Count
    Debug.Print (l_par)
    .Paragraphs(l_par).Range.InsertBreak Type:=wdPageBreak
 
    .Content.InsertParagraphAfter
    l_par = .Paragraphs.Count
    .Content.InsertAfter "Non sono state eseguite operazioni/Operazioni del " & Chr(10) & Chr(10)

    With .Paragraphs(l_par).Range.Font
        .Bold = True
        .Italic = False
        .Underline = wdUnderlineSingle
    End With
    .Content.InsertParagraphAfter
    With .Paragraphs(l_par + 2).Range.Font
        .Bold = False
        .Italic = False
        .Underline = wdUnderlineNone
    End With

    .Content.InsertAfter "Il direttore degli investimenti " & Chr(10)
    
    .Content.InsertParagraphAfter
    l_par = .Paragraphs.Count

    .Paragraphs(l_par).Range.InlineShapes.AddPicture ("C:\Users\bloomberg03\Pictures\Camera Roll\firma.png")
    
    .Content.InsertParagraphAfter
    .Content.InsertAfter "Il Risk Manager " & Chr(10)
    
    lineOftext = .Sections(1).Headers(wdHeaderFooterPrimary)
    With lineOftext.Find
        .Text = "<Mese>"
        .Replacement.Text = Application.Proper(Format(Now(), "mmmm"))
        .Wrap = wdFindStop
        .Execute Replace:=wdReplaceAll
    End With

    .SaveAs Filename:=strFolder & "\" & Name_doc

End With



End Sub



Private Function checkFolderExistance(ByVal strFolderPath As String) As Boolean

checkFolderExistance = Dir(strFolderPath, vbDirectory) <> vbNullString


End Function

Sub testingFunctions()

dt = Format(Now(), "mm.yy")
a = checkFolderExistance("Y:\Mobiliare\08 Finint Economia Reale Italia\00_Documenti_Reportistica\03 Comitati\2018\" & dt)

MsgBox a
End Sub


Private Function createFolder(ByVal strFolderPath As String) As Boolean

Dim strCurrentFolder As String
Dim astrFolders() As String
Dim i As Integer

On Error GoTo ReturnFalse

If checkFolderExistance(strFolderPath) Then GoTo ReturnTrue
astrFolders = Split(strFolderPath, "\")

For i = LBound(astrFolders) To UBound(astrFolders)
  If astrFolders(i) <> vbNullString Then
      If strCurrentFolder <> vbNullString Then
        strCurrentFolder = strCurrentFolder & "\"
      End If
      strCurrentFolder = strCurrentFolder & astrFolders(i)
      If Not checkFolderExistance(strCurrentFolder) Then
        Call MkDir(strCurrentFolder)
      End If
    End If
  Next i
  
ReturnTrue:
  createFolder = True
  Exit Function
  
ReturnFalse:
  createFolder = False
    
End Function




